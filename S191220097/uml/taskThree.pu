@startuml

interface Linable{
    +void setPosition()
    +Position getPosition()
    +int getValue()
}

class Line{
    -Position[] positions

    +Line()
    +void put()
    +Linable get()
    +String toString()
    +Linable[] toArray()
}

class Position{
    -Linable Linable

    Position()
    +void setLinable()
    
}

enum Monster {
    -int r 
    -int g 
    -int b
    -int rank
    -Position position
    +Monster[] monster

    Monster()
    {static} +void initialize()
    {static} +Gourd getGourdByRank()
    +void swapPosition()
}

interface Sorter{
    +void load()
    +void sort()
    +String getPlan()
}

class BubbleSorter{
    -int[] a
    -String plan
    +void swap()

}

class QuickSorter{
    -int[] a
    -String plan
    +void swap()
}

class SelectSorter{
    -int[] a
    -String plan
    +void swap()
}

class Snake{
    {static} -Snake theSnake
    -Sorter sorter

    {static} +Snake getTheSnake()
    +void setSorter()
    +String lineUp()
    -String[] parsePlan()
    -void execute()
}

class Matrix{
    -int colLength

    Matrix()
    @Override +String toString()
}

Line *-- Position
Linable <|-- Monster
Sorter <|-- BubbleSorter
Sorter <|-- SelectSorter
Sorter <|-- QuickSorter
Line <|-- Matrix
Snake o-- Sorter
Monster o-- Position

@enduml